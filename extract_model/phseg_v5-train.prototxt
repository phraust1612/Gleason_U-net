name: 'phseg_v5'
force_backward: true
layer {
  top: 'data'
  name: 'data'
  type: "Input"
  input_param { shape: { dim:1 dim: 1 dim: 572 dim: 572 } }
}

layer {
  bottom: 'data'
  top: 'd0b'
  name: 'conv_d0a-b'
  type: "Convolution"
  convolution_param { num_output: 64 pad: 0 kernel_size: 3 engine: CAFFE weight_filler { type: 'xavier' }} }
layer {
  bottom: 'd0b'
  top: 'd0b'
  name: 'relu_d0b'
  type: "ReLU"
}
layer {
  bottom: 'd0b'
  top: 'd0c'
  name: 'conv_d0b-c'
  type: "Convolution"
  convolution_param { num_output: 64 pad: 0 kernel_size: 3 engine: CAFFE weight_filler { type: 'xavier' }} }
layer {
  bottom: 'd0c'
  top: 'd0c'
  name: 'relu_d0c'
  type: "ReLU" }

layer {
  bottom: 'd0c'
  top: 'd1a'
  name: 'pool_d0c-1a'
  type: "Pooling"  pooling_param { pool: MAX kernel_size: 2 stride: 2 } }
layer {
  bottom: 'd1a'
  top: 'd1b'
  name: 'conv_d1a-b'
  type: "Convolution"
  convolution_param { num_output: 128 pad: 0 kernel_size: 3 engine: CAFFE weight_filler { type: 'xavier' }} }
layer {
  bottom: 'd1b'
  top: 'd1b'
  name: 'relu_d1b'
  type: "ReLU" }
layer {
  bottom: 'd1b'
  top: 'd1c'
  name: 'conv_d1b-c'
  type: "Convolution"
  convolution_param { num_output: 128 pad: 0 kernel_size: 3 engine: CAFFE weight_filler { type: 'xavier' }} }
layer {
  bottom: 'd1c'
  top: 'd1c'
  name: 'relu_d1c'
  type: "ReLU" }

layer {
  bottom: 'd1c'
  top: 'd2a'
  name: 'pool_d1c-2a'
  type: "Pooling"  pooling_param { pool: MAX kernel_size: 2 stride: 2 } }
layer {
  bottom: 'd2a'
  top: 'd2b'
  name: 'conv_d2a-b'
  type: "Convolution"
  convolution_param { num_output: 256 pad: 0 kernel_size: 3 engine: CAFFE weight_filler { type: 'xavier' }} }
layer {
  bottom: 'd2b'
  top: 'd2b'
  name: 'relu_d2b'
  type: "ReLU" }
layer {
  bottom: 'd2b'
  top: 'd2c'
  name: 'conv_d2b-c'
  type: "Convolution"
  convolution_param { num_output: 256 pad: 0 kernel_size: 3 engine: CAFFE weight_filler { type: 'xavier' }} }
layer {
  bottom: 'd2c'
  top: 'd2c'
  name: 'relu_d2c'
  type: "ReLU" }

layer {
  bottom: 'd2c'
  top: 'd3a'
  name: 'pool_d2c-3a'
  type: "Pooling"  pooling_param { pool: MAX kernel_size: 2 stride: 2 } }
layer {
  bottom: 'd3a'
  top: 'd3b'
  name: 'conv_d3a-b'
  type: "Convolution"
  convolution_param { num_output: 512 pad: 0 kernel_size: 3 engine: CAFFE weight_filler { type: 'xavier' }} }
layer {
  bottom: 'd3b'
  top: 'd3b'
  name: 'relu_d3b'
  type: "ReLU" }
layer {
  bottom: 'd3b'
  top: 'd3c'
  name: 'conv_d3b-c'
  type: "Convolution"
  convolution_param { num_output: 512 pad: 0 kernel_size: 3 engine: CAFFE weight_filler { type: 'xavier' }} }
layer {
  bottom: 'd3c'
  top: 'd3c'
  name: 'relu_d3c'
  type: "ReLU" }
layer {
  bottom: 'd3c'
  top: 'd3c'
  name: 'dropout_d3c'
  type: "Dropout" dropout_param { dropout_ratio: 0.5 } include: { phase: TRAIN }}

layer {
  bottom: 'd3c'
  top: 'd4a'
  name: 'pool_d3c-4a'
  type: "Pooling"  pooling_param { pool: MAX kernel_size: 2 stride: 2 } }
layer {
  bottom: 'd4a'
  top: 'd4b'
  name: 'conv_d4a-b'
  type: "Convolution"
  convolution_param { num_output: 1024 pad: 0 kernel_size: 3 engine: CAFFE weight_filler { type: 'xavier' }} }
layer {
  bottom: 'd4b'
  top: 'd4b'
  name: 'relu_d4b'
  type: "ReLU" }
layer {
  bottom: 'd4b'
  top: 'd4c'
  name: 'conv_d4b-c'
  type: "Convolution"
  convolution_param { num_output: 1024 pad: 0 kernel_size: 3 engine: CAFFE weight_filler { type: 'xavier' }} }
layer {
  bottom: 'd4c'
  top: 'd4c'
  name: 'relu_d4c'
  type: "ReLU" }
layer {
  bottom: 'd4c'
  top: 'd4c'
  name: 'dropout_d4c'
  type: "Dropout" dropout_param { dropout_ratio: 0.5 } include: { phase: TRAIN }}

layer {
  bottom: 'd4c'
  top: 'u3a'
  name: 'upconv_d4c_u3a'
  type: "Deconvolution"
  convolution_param { num_output: 512 pad: 0 kernel_size: 2 stride: 2 weight_filler { type: 'xavier' }} }
layer {
  bottom: 'u3a'
  top: 'u3a'
  name: 'relu_u3a'
  type: "ReLU" }
layer {
  bottom: 'd3c'
  bottom: 'u3a'
  top: 'd3cc'
  name: 'crop_d3c-d3cc'  type: "Crop" }
layer {
  bottom: 'u3a'
  bottom: 'd3cc'
  top: 'u3b'
  name: 'concat_d3cc_u3a-b'  type: "Concat" }
layer {
  bottom: 'u3b'
  top: 'u3c'
  name: 'conv_u3b-c'
  type: "Convolution"
  convolution_param { num_output: 512 pad: 0 kernel_size: 3 engine: CAFFE weight_filler { type: 'xavier' }} }
layer {
  bottom: 'u3c'
  top: 'u3c'
  name: 'relu_u3c'
  type: "ReLU" }
layer {
  bottom: 'u3c'
  top: 'u3d'
  name: 'conv_u3c-d'
  type: "Convolution"
  convolution_param { num_output: 512 pad: 0 kernel_size: 3 engine: CAFFE weight_filler { type: 'xavier' }} }
layer {
  bottom: 'u3d'
  top: 'u3d'
  name: 'relu_u3d'
  type: "ReLU" }

layer {
  bottom: 'u3d'
  top: 'u2a'
  name: 'upconv_u3d_u2a'
  type: "Deconvolution"
  convolution_param { num_output: 256 pad: 0 kernel_size: 2 stride: 2 weight_filler { type: 'xavier' }} }
layer {
  bottom: 'u2a'
  top: 'u2a'
  name: 'relu_u2a'
  type: "ReLU" }
layer {
  bottom: 'd2c'
  bottom: 'u2a'
  top: 'd2cc'
  name: 'crop_d2c-d2cc'  type: "Crop" }
layer {
  bottom: 'u2a'
  bottom: 'd2cc'
  top: 'u2b'
  name: 'concat_d2cc_u2a-b'  type: "Concat" }
layer {
  bottom: 'u2b'
  top: 'u2c'
  name: 'conv_u2b-c'
  type: "Convolution"
  convolution_param { num_output: 256 pad: 0 kernel_size: 3 engine: CAFFE weight_filler { type: 'xavier' }} }
layer {
  bottom: 'u2c'
  top: 'u2c'
  name: 'relu_u2c'
  type: "ReLU" }
layer {
  bottom: 'u2c'
  top: 'u2d'
  name: 'conv_u2c-d'
  type: "Convolution"
  convolution_param { num_output: 256 pad: 0 kernel_size: 3 engine: CAFFE weight_filler { type: 'xavier' }} }
layer {
  bottom: 'u2d'
  top: 'u2d'
  name: 'relu_u2d'
  type: "ReLU" }

layer {
  bottom: 'u2d'
  top: 'u1a'
  name: 'upconv_u2d_u1a'
  type: "Deconvolution"
  convolution_param { num_output: 128 pad: 0 kernel_size: 2 stride: 2 weight_filler { type: 'xavier' }} }
layer {
  bottom: 'u1a'
  top: 'u1a'
  name: 'relu_u1a'
  type: "ReLU" }
layer {
  bottom: 'd1c'
  bottom: 'u1a'
  top: 'd1cc'
  name: 'crop_d1c-d1cc'  type: "Crop" }
layer {
  bottom: 'u1a'
  bottom: 'd1cc'
  top: 'u1b'
  name: 'concat_d1cc_u1a-b'  type: "Concat" }
layer {
  bottom: 'u1b'
  top: 'u1c'
  name: 'conv_u1b-c'
  type: "Convolution"
  convolution_param { num_output: 128 pad: 0 kernel_size: 3 engine: CAFFE weight_filler { type: 'xavier' }} }
layer {
  bottom: 'u1c'
  top: 'u1c'
  name: 'relu_u1c'
  type: "ReLU" }
layer {
  bottom: 'u1c'
  top: 'u1d'
  name: 'conv_u1c-d'
  type: "Convolution"
  convolution_param { num_output: 128 pad: 0 kernel_size: 3 engine: CAFFE weight_filler { type: 'xavier' }} }
layer {
  bottom: 'u1d'
  top: 'u1d'
  name: 'relu_u1d'
  type: "ReLU" }

layer {
  bottom: 'u1d'
  top: 'u0a'
  name: 'upconv_u1d_u0a'
  type: "Deconvolution"
  convolution_param { num_output: 128 pad: 0 kernel_size: 2 stride: 2 weight_filler { type: 'xavier' }} }
layer {
  bottom: 'u0a'
  top: 'u0a'
  name: 'relu_u0a'
  type: "ReLU" }
layer {
  bottom: 'd0c'
  bottom: 'u0a'
  top: 'd0cc'
  name: 'crop_d0c-d0cc'  type: "Crop" }
layer {
  bottom: 'u0a'
  bottom: 'd0cc'
  top: 'u0b'
  name: 'concat_d0cc_u0a-b'  type: "Concat" }
layer {
  bottom: 'u0b'
  top: 'u0c'
  name: 'conv_u0b-c'
  type: "Convolution"
  convolution_param { num_output: 64 pad: 0 kernel_size: 3 engine: CAFFE weight_filler { type: 'xavier' }} }
layer {
  bottom: 'u0c'
  top: 'u0c'
  name: 'relu_u0c'
  type: "ReLU" }
layer {
  bottom: 'u0c'
  top: 'u0d'
  name: 'conv_u0c-d'
  type: "Convolution"
  convolution_param { num_output: 64 pad: 0 kernel_size: 3 engine: CAFFE weight_filler { type: 'xavier' }} }
layer {
  bottom: 'u0d'
  top: 'u0d'
  name: 'relu_u0d'
  type: "ReLU" }

layer {
  bottom: 'u0d'
  top: 'score'
  name: 'conv_u0d-score'
  type: "Convolution"
  convolution_param { engine: CAFFE num_output: 2 pad: 0 kernel_size: 1 weight_filler { type: 'xavier' }} }
layer {
  bottom: 'score'
  bottom: 'label'
  top: 'loss'
  name: 'loss'
  type: "Softmax_loss"
  loss_param { ignore_label: 2 }include: { phase: TRAIN }}
